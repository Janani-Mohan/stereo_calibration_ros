<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <!-- <arg name="sim" default="true" />
  <arg name="robot_ip" unless="$(arg sim)" /> -->


  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find stereo_gazebo)/worlds/qual1_calibration.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
    <arg name="verbose" value="true" />
  </include>

 <param name="robot_description" command="$(find xacro)/xacro.py '$(find stereo_description)/urdf/camera.xacro'" />

 <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" args="-urdf -model stereo_cam -param robot_description"/>

  <!-- ros_control irb120bot launch file -->
 <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher"/>
  <!-- publish the robot state (tf transforms) -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>
  <node name="camera_frame" pkg="tf" type="static_transform_publisher" args="0 0 1.26 -1.5708 3.14 1.5708 /world /left_camera_optical_frame 100"/>

  <!-- Stereo image processing -->
  <node ns="multisense_sl/camera" name="stereo_proc" pkg="stereo_image_proc" type="stereo_image_proc" respawn="false" output="log">
    <param name="disparity_range" type="int" value="128"/>
    <param name="approximate_sync" type="bool" value="false"/>
  </node>
  

</launch>
